{"version":3,"sources":["Components/Alert.js","Components/Navbar.js","Components/textForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","React","createElement","className","concat","type","role","word","lower","toLowerCase","console","log","charAt","toUpperCase","slice","FirstLatterCapitalize","msg","data-bs-dismiss","aria-label","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","id","aria-current","About","progressProp","aria-labelledby","onClick","backgroundChanger","toggleMode","htmlFor","setText","TextForm","_useState","useState","_useState2","_slicedToArray","text","style","color","heading","value","onChange","e","target","rows","placeholder","autoFocus","backgroundColor","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","App","setMode","_useState3","_useState4","updateText","_useState5","_useState6","setAlert","message","setTimeout","Fragment","body","classList","remove","add","setInterval","cls","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.a97c7ec8.chunk.js","sourcesContent":["import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nexport default function Alert(props) {\r\n\r\n  // Function Latter to Uppercase\r\n  const FirstLatterCapitalize = (word)=>{\r\n       const  lower = word.toLowerCase();\r\n       console.log(lower.charAt(0).toUpperCase() + lower.slice(1));\r\n     return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (  \r\n props.alert &&  <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{FirstLatterCapitalize(props.alert.type)}: &nbsp;</strong> {props.alert.msg}\r\n  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n  </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\n// importing from the app,js file \r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg nabvar-background navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" href=\"/\">{props.About}</a>\r\n        </li>\r\n        <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle active\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            {/* this is default props */}\r\n          {props.progressProp}\r\n          </a>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <li><a className=\"dropdown-item\" href=\"/\">Java </a></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Python</a></li>\r\n            <li><hr className=\"dropdown-divider\"/></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">AI</a></li>\r\n          </ul>\r\n        </li>        \r\n        </ul>\r\n        <div className=\"color-picker\">\r\n          <div className='color-one'>\r\n            <div className=\"inner-color-one\" onClick={()=>{props.backgroundChanger('mainBackground-1')}}></div>\r\n          </div>\r\n          <div className='color-two'>\r\n          <div className=\"inner-color-two\" onClick={()=>{props.backgroundChanger('mainBackground-2')}}></div>\r\n          </div>\r\n          <div className='color-three'>\r\n          <div className=\"inner-color-three\" onClick={()=>{props.backgroundChanger('mainBackground-3')}}></div>\r\n          </div>\r\n        </div>\r\n              <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.setText}</label>\r\n</div>\r\n</div>\r\n  </div>\r\n</nav>\r\n    </div>\r\n  )\r\n}\r\n\r\n//proptype type-hacking search on google\r\n// through this we can set security about the proptypes which only there propptypes should we strings\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    About: PropTypes.string.isRequired\r\n};\r\n\r\n// we can set default props as it is\r\nNavbar.defaultProps = {\r\n    title: 'set title here',\r\n   progressProp: 'Progress inside'\r\n}","import React, { useState } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n  // text = \"New Text\" // Wrong way to chaneg the state\r\n  //setText('update the state') // wright wat to change the state\r\n\r\n\r\n  // on change function\r\n  const handleUpchange = (e) => {\r\n    // console.log('On Change');\r\n    setText(e.target.value);\r\n  };\r\n\r\n\r\n  // covert to uppercase Function\r\n  const handleUpclick = () => {\r\n    //    console.log('you have clicked UpClick Button ' + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert('Text has been converted into Capital Latter!!!!', 'success');\r\n  };  \r\n\r\n\r\n  //convert to LowerCase Function\r\n  const handleLowclick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert('Text has been converted into Small Latter!!!!', 'success')\r\n  };\r\n\r\n\r\n  // clear text Function\r\n  const handleClearclick = () => {\r\n    let text = \"\";\r\n    setText(text);\r\n    props.showAlert('Text has been clear from the Text Area!!!!', 'success')\r\n  };\r\n\r\n\r\n  // copy pase text function\r\n  const handleCopyText =() =>{\r\n    let text = document.getElementById('exampleFormControlTextarea1');\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    alert(\"Copied the text:  \" + text.value);\r\n    props.showAlert('Text has been Copied!!!!', 'success')\r\n  }\r\n\r\n\r\n  const handleExtraSpace = ()=>{\r\n   let newText = text.split(/[ ]+/);\r\n   setText(newText.join(\" \"));\r\n   props.showAlert('Extra space has been deleted!!!!', 'success')\r\n  //  console.log(newText);\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container mt-3\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n        <h2>{props.heading}</h2>\r\n        <div className=\"mb-3\">\r\n          <label\r\n            htmlFor=\"exampleFormControlTextarea1\"\r\n            className=\"form-label\"\r\n          ></label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleUpchange}\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"8\"\r\n            placeholder=\"Enter your text here\"\r\n            autoFocus\r\n            style={{backgroundColor:props.mode === 'dark'?'rgb(0 72 129)':'white', color:props.mode==='dark'?'white':'#042743'}}\r\n          ></textarea>\r\n        </div>\r\n\r\n       {/* upperCase Changer button */}\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleUpclick}\r\n          className=\"btn btn-primary\"\r\n        >\r\n          convert to upper Case\r\n        </button>\r\n\r\n        {/* lowerCase Changer Button */}\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleLowclick}\r\n          className=\"btn btn-primary mx-2\"\r\n        >\r\n          convert to Lower Case\r\n        </button>\r\n\r\n        {/* clear text button */}\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleClearclick}\r\n          className=\"btn btn-primary\"\r\n        >\r\n          Clear Text\r\n        </button>\r\n\r\n        {/* copt text button */}\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleCopyText}\r\n          className=\"btn btn-primary mx-2\"\r\n        >\r\n          Copt Text\r\n        </button>\r\n\r\n\r\n        {/* extra space remove button */}\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleExtraSpace}\r\n          className=\"btn btn-primary\"\r\n        >\r\n          Remove Extra Space\r\n        </button>\r\n\r\n\r\n      </div>\r\n      <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n        <h2>Text Summary</h2>\r\n        <p>\r\n          <b>{text.split(\" \").length}</b> words <b>{text.length}</b> charactors\r\n        </p>\r\n        <p>\r\n          <b>{0.008 * text.split(\" \").length}</b> minutes for reading these\r\n          words\r\n        </p>\r\n        <h3>Text reading Preaview</h3>\r\n        <p>\r\n          <em>{text.length>0?text:'Enter Something in the text box to Ptreview it here !'}</em>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nTextForm.propTypes = {\r\n  heading: PropTypes.string.isRequired,\r\n};\r\n","import './App.css';\n// import AboutUs from './Components/AboutUs';\nimport Alert from './Components/Alert';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/textForm';\nimport React, {useState} from 'react';\n\n\nfunction App() {\n  const removeBodyClass =()=>{\n    document.body.classList.remove('class-1');\n    document.body.classList.remove('class-2');\n    document.body.classList.remove('mainBackground-1');\n    document.body.classList.remove('mainBackground-2');\n    document.body.classList.remove('mainBackground-3');   \n  }\n    \n  const backgroundChanger = (cls)=>{\n    removeBodyClass();\n    console.log(cls);\n    document.body.classList.add(cls);\n  }\n\n// state for toogle dark mode button\n  const [mode, setMode] =useState('light');\n\n  // state fot dark mode enable disable text\n  const [setText, updateText] = useState('Enable Darkmode');\n\n  // state for the warning mesages\n  const [alert, setAlert] = useState(null);\n\n  //method for warning\n  const showAlert = (message, type)=>{\nsetAlert({\n  msg: message,\n  type: type\n})\nsetTimeout(() => {\nsetAlert(null)\n}, 1500);\n  }\n\n  //togggle function which changing the backgroundcolor of navbar and backgroundcolor of body as well as changing the enable and disable text.\n  const toggleMode =()=>{\n    \n    if(mode === 'light'){\n      setMode('dark');\n      document.title = 'TextUtils - DarkMode';\n      document.body.classList.remove('mainBackground-1');\n      document.body.classList.remove('mainBackground-2');\n      document.body.classList.remove('mainBackground-3');\n      document.body.classList.add('class-1');\n      document.body.classList.remove('class-2');\n      updateText('Disable DarkMode');\n      showAlert('Dark mode has been Enable', 'success');\n      setInterval(() => {\n        document.title = 'TextUtils is Amazing DarkMode';\n      }, 2000);\n      setInterval(() => {\n        document.title = 'Install TextUtils Now';\n      }, 4000);\n    }\n    else{\n      setMode('light');\n      document.title = 'TextUtils - LightkMode';\n      document.body.classList.remove('mainBackground-1');\n      document.body.classList.remove('mainBackground-2');\n      document.body.classList.remove('mainBackground-3');\n      document.body.classList.add('class-2');\n      document.body.classList.remove('class-1');\n      updateText('Enable DarkMode');\n      showAlert('Light mode has been Enable', 'success')\n     \n    }\n  }  \n  return (\n    <>  \n<Navbar title=\"Mr Coder Update\" About=\"About\" mode ={mode} toggleMode ={toggleMode} backgroundChanger={backgroundChanger} setText ={setText}/>\n<Alert alert ={alert} />\n  <TextForm  heading ='Enter the text to analyze below' mode ={mode} showAlert={showAlert} />\n</>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}